cmake_minimum_required (VERSION 2.8)
project(LIBTDB)
IF(NOT CMAKE_BUILD_TYPE)
  #SET(CMAKE_BUILD_TYPE "DEBUG")
  SET(CMAKE_BUILD_TYPE "RELEASE")
  #SET(CMAKE_BUILD_TYPE "RELWITHDEBINFO")
  #SET(CMAKE_BUILD_TYPE "MINSIZEREL")
ENDIF()

if (NOT DEFINED TDBREAD_SOURCE_DIR)
  set (TDBREAD_SOURCE_DIR ${CMAKE_SOURCE_DIR}/../)
endif (NOT DEFINED TDBREAD_SOURCE_DIR)
set(CMAKE_MODULE_PATH ${TDBREAD_SOURCE_DIR}/cmake)

UNSET(Boost_LIBRARIES)
ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON) 
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost COMPONENTS log log_setup thread filesystem system REQUIRED)
if(Boost_FOUND)
   include_directories(${Boost_INCLUDE_DIRS})
endif()

if(CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++0x")
endif()

# Find ALL the source and header files
include_directories(${CMAKE_SOURCE_DIR})
FILE(GLOB_RECURSE libtdb_SRCS ./ *.cpp *.hpp)
add_library(libtdb SHARED ${libtdb_SRCS})
target_link_libraries(libtdb ${Boost_LIBRARIES})